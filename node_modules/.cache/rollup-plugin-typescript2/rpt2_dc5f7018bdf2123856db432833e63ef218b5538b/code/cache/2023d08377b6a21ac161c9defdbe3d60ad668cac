{"code":"import { HEX_REG, HHEEXX_REG } from '../utils/reg';\r\n/**\r\n * HEX to HSL\r\n *\r\n * @example\r\n * #rgb => hsl(h,s%,l%)\r\n * #rgba => hsl(h,s%,l%,a)\r\n * #rrggbb => hsl(h,s%,l%)\r\n * #rrggbbaa => hsl(h,s%,l%,a)\r\n *\r\n * @param hex string\r\n *\r\n * @returns  hsl[a] string\r\n */\r\nfunction hexToHSL(hex) {\r\n    if (!(HEX_REG.test(hex) || HHEEXX_REG.test(hex)))\r\n        throw new Error(\"Invalid input HEX color\");\r\n    // Convert hex to RGB first\r\n    var r = '0', g = '0', b = '0', a = '1';\r\n    if (hex.length == 4 || hex.length === 5) {\r\n        r = \"0x\" + hex[1] + hex[1];\r\n        g = \"0x\" + hex[2] + hex[2];\r\n        b = \"0x\" + hex[3] + hex[3];\r\n    }\r\n    else if (hex.length == 7 || hex.length === 9) {\r\n        r = \"0x\" + hex[1] + hex[2];\r\n        g = \"0x\" + hex[3] + hex[4];\r\n        b = \"0x\" + hex[5] + hex[6];\r\n    }\r\n    if (hex.length === 5)\r\n        a = \"0x\" + hex[4] + hex[4];\r\n    else if (hex.length === 9)\r\n        a = \"0x\" + hex[7] + hex[8];\r\n    // Then to HSL\r\n    var red = +r / 255, green = +g / 255, blue = +b / 255, alpha = +(+a / 255).toFixed(3);\r\n    var cmin = Math.min(red, green, blue), cmax = Math.max(red, green, blue), delta = cmax - cmin, h = 0, s = 0, l = 0;\r\n    if (delta == 0)\r\n        h = 0;\r\n    else if (cmax == red)\r\n        h = ((green - blue) / delta) % 6;\r\n    else if (cmax == green)\r\n        h = (blue - red) / delta + 2;\r\n    else\r\n        h = (red - green) / delta + 4;\r\n    h = Math.round(h * 60);\r\n    if (h < 0)\r\n        h += 360;\r\n    l = (cmax + cmin) / 2;\r\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n    s = +(s * 100).toFixed(1);\r\n    l = +(l * 100).toFixed(1);\r\n    if (hex.length === 4 || hex.length === 7)\r\n        return [h, s, l];\r\n    else\r\n        return [h, s, l, alpha];\r\n}\r\nexport default hexToHSL;\r\n","references":["/Users/sylvenas/Documents/github/color-transfer/src/utils/reg.ts"],"dts":{"name":"/Users/sylvenas/Documents/github/color-transfer/node_modules/.cache/rollup-plugin-typescript2/placeholder/HEX/HEXToHSL.d.ts","writeByteOrderMark":false,"text":"/**\r\n * HEX to HSL\r\n *\r\n * @example\r\n * #rgb => hsl(h,s%,l%)\r\n * #rgba => hsl(h,s%,l%,a)\r\n * #rrggbb => hsl(h,s%,l%)\r\n * #rrggbbaa => hsl(h,s%,l%,a)\r\n *\r\n * @param hex string\r\n *\r\n * @returns  hsl[a] string\r\n */\r\ndeclare function hexToHSL(hex: string): Array<number>;\r\nexport default hexToHSL;\r\n"}}
